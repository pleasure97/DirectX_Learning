/////////////
// GLOBALS //
/////////////

Texture2D colorTexture : register(t0); 
Texture2D glowTexture : register(t1); 
SamplerState SampleType : register(s0); 

//////////////////////
// CONSTANT BUFFERS //
//////////////////////

cbuffer GlowBuffer
{
	float glowStrength; 
	float3 padding;
};

//////////////
// TYPEDEFS //
//////////////

struct PixelInputType
{
	float4 position : SV_POSITION; 
	float2 tex : TEXCOORD0;
};

////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 GlowPixelShader(PixelInputType input) : SV_TARGET
{
	float4 textureColor; 
	float4 glowMap;
	float4 color; 

	// Sample the pixel color from the texture using the sampler at this texture coordinate location. 
	textureColor = colorTexture.Sample(SampleType, input.tex); 
	
	// Sample the glow texture.
	glowMap = glowTexture.Sample(SampleType, input.tex); 

	// Add the texture color to the glow color multiplied by the glow strength.
	color = saturate(textureColor + (glowMap * glowStrength)); 

	return color; 
}